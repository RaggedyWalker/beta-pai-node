{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */

    /* Language and Environment */
    "target": "ESNext",
    /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "experimentalDecorators": true,
    /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true,
    /* Emit design-type metadata for decorated declarations in source files. */
    "useDefineForClassFields": true,
    /* Emit ECMAScript-standard-compliant class fields. */
    // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */

    /* Modules */
    "module": "NodeNext",
    /* Specify what module code is generated. */
    "moduleResolution": "NodeNext",
    /* Specify how TypeScript looks up a file from a given module specifier. */
    // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
    // "typeRoots": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */
    "types": [
      "node"
    ],
    /* Specify type package names to be included without being referenced in a source file. */
    /* JavaScript Support */
    "allowJs": true,
    /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    /* Emit */
    "declaration": true,
    /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */
    "sourceMap": true,
    /* Create source map files for emitted JavaScript files. */
//     "outFile": "dist.js",                                  /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */
    "outDir": "dist",
    /* Specify an output folder for all emitted files. */
    "declarationDir": "./dist",
    /* Specify the output directory for generated declaration files. */
    "allowSyntheticDefaultImports": true,
    /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,
    /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,
    /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,
    "skipLibCheck": true
  },
  "include": [
    ".eslintrc.js",
    "src/**/*",
    "bin/**/*",
    "**/*.ts"
  ],
  "exclude": [
    "public",
    "dist"
  ],
  "ts-node": {
    "require": [
      "tsconfig-paths/register"
    ]
    //    "esm": true
  }
}
